import { MessageContext } from "puregram"
import prisma from "../prisma"
import { Accessed, Logger, Online_Set, Send_Message, User_Banned, Verify_User } from "../helper"
import { User_Pk_Get, User_Pk_Init } from "../other/pk_metr"
import { users_pk } from "../.."

export async function Sniper_Research_Perfab_Input_ON(context: MessageContext, queryPayload: any) {
    // –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user_verify = await Verify_User(context)
    if (!user_verify) { return }
    const user_self = user_verify.user_check
    //const blank_self = user_verify.blank_check
    // –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∫ –≤–≤–æ–¥—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∞–Ω–∫–µ—Ç—ã —Å–Ω–∞–π–ø–µ—Ä—Å–∫–∏–º –≤—ã—Å—Ç—Ä–µ–ª–æ–º
    await User_Pk_Init(context)
    const id = await User_Pk_Get(context)
    if (id == null) { return }
    users_pk[id].mode = 'input'
    users_pk[id].operation = 'sniper_research_prefab_input_off'
	users_pk[id].id_target = queryPayload.idb
	await Logger(`(private chat) ~ starting creation self blank by <user> ‚Ññ${context.chat.id}`)
    await Send_Message(context, `üß∑ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–Ω–∫–µ—Ç—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ –≥–∏–ø–µ—Ä-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –∏–≥–Ω–æ—Ä–∏—Ä—É—è ${await Accessed(context) != `user` ? '–±–∞–Ω—Ö–∞–º–º–µ—Ä,' : ''} –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–Ω–∫–µ—Ç:`, /*blank.photo*/)
    await Logger(`(research sniper) ~ starting write target for sniper shot for <blank> #${queryPayload.idb} by @${user_self.username}`)
}