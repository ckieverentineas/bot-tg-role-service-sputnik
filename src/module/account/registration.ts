import { Context, Markup } from "telegraf";
import prisma from "../prisma";
import { InlineKeyboard, KeyboardBuilder, MessageContext } from "puregram";
import { telegram } from "../..";
import { Logger, Send_Message } from "../helper";
//import { Keyboard_Index, Logger, Send_Message, User_Info } from "./helper";

export async function User_Registration(context: MessageContext) {
    const keyboard = InlineKeyboard.keyboard([
        [ // first row
          InlineKeyboard.textButton({ // first row, first button
            text: '‚úè', payload: 'success_processing_of_personal_data'
          }),
      
          InlineKeyboard.textButton({ // first row, second button
            text: 'üë£', payload: 'denied_processing_of_personal_data'
          })
        ]
    ])
    // –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
    await context.send(`
        ‚ö† –ß—Ç–æ –≤–∞–º —Å–ª–µ–¥—É–µ—Ç –∑–Ω–∞—Ç—å –æ –°–ø—É—Ç–Ω–∏–∫–µ: 
        ‚≠ê –ú—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –Ω–µ–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é –ª–µ–∫—Å–∏–∫—É; 
        ‚≠ê –ü—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã –∏–∑–±–µ–≥–∞–π—Ç–µ –Ω–µ–ø—Ä–∏—Å—Ç–æ–π–Ω—ã—Ö –∏ –≥—Ä—è–∑–Ω—ã—Ö —Å–ª–æ–≤ –∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–π;
        ‚≠ê –í–µ—Å—å –ø–æ—à–ª—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∫—Ä–∞–π–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å—Ç–∞–≤–∏—Ç—å –¥–ª—è –ª–∏—á–Ω–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏;
        ‚≠ê –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –°–ø—É—Ç–Ω–∏–∫ ‚Äî –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–∏–≥—Ä–æ–∫–∞, –∞ –Ω–µ –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è –ª–∏—á–Ω—ã—Ö –±–µ—Å–µ–¥;
        ‚≠ê –°–æ–±–ª—é–¥–∞–π—Ç–µ —É–≤–∞–∂–µ–Ω–∏–µ –∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.
        üöÄ –ö–æ—Ä–æ—Ç–∫–æ: —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –±–µ–∑ –º–∞—Ç–∞, –ø–æ—à–ª–æ—Å—Ç–∏ –∏ —Ñ–ª—É–¥–∞ –≤ –∞–Ω–∫–µ—Ç–∞—Ö. –°–ø—É—Ç–Ω–∏–∫ ‚Äî –Ω–µ –ø—Ä–∏—Ç–æ–Ω.
        üìú –†–∞—Å–ø–∏—à–∏—Ç–µ—Å—å –∑–¥–µ—Å—å –æ —Å–≤–æ–µ–º —Å–æ–≥–ª–∞—Å–∏–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –æ–±—è–∑—É–µ—Ç–µ—Å—å —Å–æ–±–ª—é–¥–∞—Ç—å –≤—ã—à–µ–∏–∑–ª–æ–∂–µ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. 
        üí¨ –£ –≤–∞—Å –µ—Å—Ç—å 10 –º–∏–Ω—É—Ç –Ω–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏—è!`, { reply_markup: keyboard }
    );
    /*
    if (!/–¥–∞|yes|–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è|–∫–æ–Ω–µ—á–Ω–æ|‚úè/i.test(answer.text|| '{}')) {
        await context.send('‚åõ –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –¥–∞—Ç—å —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ. –ï—Å–ª–∏ —á—Ç–æ, –∑–∞–≥–ª—è–¥—ã–≤–∞–π—Ç–µ –Ω–∞ —á–∞–π');
        return;
    }
    //–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏–≥—Ä–æ–∫–∞
    const visit: any = await context.question(`‚åõ –ü–æ—Å—Ç–∞–≤–∏–≤ —Å–≤–æ—é –ø–æ–¥–ø–∏—Å—å, –≤—ã —É–≤–∏–¥–µ–ª–∏ –•—Ä–∞–Ω–∏—Ç–µ–ª—è –°–ø—É—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —á—Ç–æ-—Ç–æ –ø–∏—Å–∞–ª –Ω–∞ –ª–∏—Å—Ç–∫–µ –ø–µ—Ä–≥–∞–º–µ–Ω—Ç–∞.`,
        { 	
            keyboard: Keyboard.builder()
            .textButton({ label: 'üñê –ü–æ–¥–æ–π—Ç–∏ –∏ –ø–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è', payload: { command: '–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è' }, color: 'positive' }).row()
            .textButton({ label: '‚è∞ –ñ–¥–∞—Ç—å, –ø–æ–∫–∞ –•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–∞–∫–æ–Ω—á–∏—Ç', payload: { command: '–û—Ç–∫–∞–∑–∞—Ç—å—Å—è' }, color: 'negative' }).oneTime().inline(),
            answerTimeLimit
        }
    );
    if (visit.isTimeout) { return await context.send(`‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏—Å—Ç–µ–∫–ª–æ!`) }
    const save = await prisma.account.create({	data: {	idvk: context.senderId } })
    const info = await User_Info(context)
    await context.send(`‚åõ –•—Ä–∞–Ω–∏—Ç–µ–ª—å –≤–∞—Å —É–≤–∏–¥–µ–ª –∏ —Å–∫–∞–∑–∞–ª:\n ‚Äî –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –°–ø—É—Ç–Ω–∏–∫! \n ‚öñ–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ, ${info.first_name}\n üïØ GUID: ${save.id}. \n üé• idvk: ${save.idvk}\n ‚ö∞ –î–∞—Ç–∞ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${save.crdate}\n`)
    await Logger(`In database created new user with uid [${save.id}] and idvk [${context.senderId}]`)
    /*await context.send(`‚ö† –ù–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã "–¶–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫ –ú–∞–≥–æ–º–∏—Ä–∞":`,{ 	
        keyboard: Keyboard.builder()
        .urlButton({ label: '‚ö° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', url: `https://vk.com/@bank_mm-instrukciya-po-polzovaniu-botom-centrobanka-magomira` }).row().inline(),
        answerTimeLimit
    })*/
    //const ans_selector = `‚Åâ @id${save.idvk}(${info.first_name}) –ª–µ–≥–∞–ª—å–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –°–ø—É—Ç–Ω–∏–∫–µ –ø–æ–¥ GUID: ${save.id}!`
    //await Send_Message(chat_id, ans_selector)
    //await Keyboard_Index(context, `üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ë–∞–∑–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ [!—Å–ø—É—Ç–Ω–∏–∫] –±–µ–∑ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ—á–µ–∫!`)
}

export async function Denied_Processing_Of_Personal_Data(message: MessageContext) {
    const save_check = await prisma.account.findFirst({ where: { idvk: message.chat.id }})
    if (save_check) { return }
    await Send_Message(message, '‚åõ –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –¥–∞—Ç—å —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ. –ï—Å–ª–∏ —á—Ç–æ, –∑–∞–≥–ª—è–¥—ã–≤–∞–π—Ç–µ –Ω–∞ —á–∞–π');
}

export async function Success_Processing_Of_Personal_Data(message: MessageContext) {
    const save_check = await prisma.account.findFirst({ where: { idvk: message.chat.id }})
    if (save_check) { return }
    await Send_Message(message, '‚åõ –ü–æ—Å—Ç–∞–≤–∏–≤ —Å–≤–æ—é –ø–æ–¥–ø–∏—Å—å, –≤—ã —É–≤–∏–¥–µ–ª–∏ –•—Ä–∞–Ω–∏—Ç–µ–ª—è –°–ø—É—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —á—Ç–æ-—Ç–æ –ø–∏—Å–∞–ª –Ω–∞ –ª–∏—Å—Ç–∫–µ –ø–µ—Ä–≥–∞–º–µ–Ω—Ç–∞.');
    
    const save = await prisma.account.create({	data: {	idvk: message.chat.id } })
    await Send_Message(message, `‚åõ –•—Ä–∞–Ω–∏—Ç–µ–ª—å –≤–∞—Å —É–≤–∏–¥–µ–ª –∏ —Å–∫–∞–∑–∞–ª:\n ‚Äî –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –†–∞—Å–ø—É—Ç–Ω–∏–∫! \n ‚öñ–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ, ${message.chat.firstName}\n üïØ GUID: ${save.id}. \n üé• idtg: ${save.idvk}\n ‚ö∞ –î–∞—Ç–∞ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${save.crdate}\n`)
    await Logger(`In database created new user with uid [${save.id}] and idtg [${save.idvk}]`)
    //const ans_selector = `‚Åâ @id${save.idvk}(${info.first_name}) –ª–µ–≥–∞–ª—å–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –°–ø—É—Ç–Ω–∏–∫–µ –ø–æ–¥ GUID: ${save.id}!`
    //await Send_Message(chat_id, ans_selector)
    //await Keyboard_Index(context, `üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ë–∞–∑–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ [!—Å–ø—É—Ç–Ω–∏–∫] –±–µ–∑ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ—á–µ–∫!`)
}